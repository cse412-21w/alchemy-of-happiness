d =read.csv(file = '/Users/xxs77/desktop/alchemy-of-happiness/static/happiness_percentage.csv')
library(ggplot2)
library(gganimate)
library(tidyverse)
library(scales)
library(gifski)
library(viridis)
d =read.csv(file = '/Users/xxs77/desktop/alchemy-of-happiness/static/happiness_percentage.csv')
d
d_formatted <- d %>%
mutate(value = Score) %>%
group_by(Year) %>%
mutate(rank = rank(-value),
Value_lbl = paste0(" ", value)) %>%
group_by(Country) %>%
filter(rank <= 10) %>%
ungroup()
d =read.csv(file = '/Users/xxs77/desktop/happiness_percentage.csv')
d
d_formatted <- d %>%
mutate(value = Score) %>%
group_by(Year) %>%
mutate(rank = rank(-value),
Value_lbl = paste0(" ", value)) %>%
group_by(Country) %>%
filter(rank <= 10) %>%
ungroup()
d =read.csv(file = '/Users/xxs77/desktop/happiness_percentage.csv')
d
d_formatted <- d %>%
mutate(value = Score) %>%
group_by(Year) %>%
mutate(rank = rank(-value),
Value_lbl = paste0(" ", value)) %>%
group_by(Country) %>%
filter(rank <= 10) %>%
ungroup()
staticplot = ggplot(d_formatted, aes(rank, group = Country, fill = as.factor(Country), colour = as.factor(Country))) +
geom_tile(aes(y = value/2, height = value, width = 0.8), alpha = 0.8, colour = NA) +
geom_text(aes(y = 0, label = paste(Country, " ")), vjust = 0.2, hjust = 1, size = 8) +
geom_text(aes(y = value, label = Value_lbl, hjust = 0), size = 8) +
coord_flip(clip = "off", expand = FALSE) +
scale_x_reverse() +
guides(colour = FALSE, fill = FALSE) +
theme(axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "none",
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_line(),
panel.grid.minor.x = element_line(),
plot.title = element_text(size = 32, hjust = 0.5, face = "bold", colour = "black", vjust = -1),
plot.subtitle=element_text(size = 32, hjust = 0.5, face = "italic", colour = "black"),
plot.caption = element_text(size = 16, hjust = 0.5, face = "italic", colour = "black"),
plot.background = element_blank(),
plot.margin = margin(1, 3, 1, 6.5, "cm"))
anim = staticplot + transition_states(Year, transition_length = 2, state_length = 1) +
view_follow(fixed_y = TRUE)  +
labs(title = "Happniess (Top 10 Countries): {closest_state}",
subtitle = " ",
caption = "happiness of top 10 countries from 2015 to 2019")
animate(anim, nframes = 100, fps = 10,  width = 1200, height = 600,
renderer = gifski_renderer("Barplot_country.gif"))
staticplot = ggplot(d_formatted, aes(rank, group = Country, fill = as.factor(Country), colour = as.factor(Country))) +
geom_tile(aes(y = value/2, height = value, width = 0.8), alpha = 0.8, colour = NA) +
geom_text(aes(y = 0, label = paste(Country, " ")), vjust = 0.2, hjust = 1, size = 8) +
geom_text(aes(y = value, label = Value_lbl, hjust = 0), size = 8) +
coord_flip(clip = "off", expand = FALSE) +
scale_x_reverse() +
guides(colour = FALSE, fill = FALSE) +
theme(axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "none",
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_line(),
panel.grid.minor.x = element_line(),
plot.title = element_text(size = 32, hjust = 0.5, face = "bold", colour = "black", vjust = -1),
plot.subtitle=element_text(size = 32, hjust = 0.5, face = "italic", colour = "black"),
plot.caption = element_text(size = 16, hjust = 0.5, face = "italic", colour = "black"),
plot.background = element_blank(),
plot.margin = margin(1, 3, 1, 6.5, "cm")) +
scale_fill_brewer(palette="Paired") + scale_color_brewer(palette="Paired")
anim = staticplot + transition_states(Year, transition_length = 2, state_length = 1) +
view_follow(fixed_y = TRUE)  +
labs(title = "Happniess (Top 10 Countries): {closest_state}",
subtitle = " ",
caption = "happiness of top 10 countries from 2015 to 2019")
animate(anim, nframes = 100, fps = 10,  width = 1200, height = 600,
renderer = gifski_renderer("Barplot_country.gif"))
library(ggplot2)
library(gganimate)
library(tidyverse)
library(scales)
library(gifski)
library(viridis)
library(RColorBrewer)
d =read.csv(file = '/Users/xxs77/desktop/happiness_percentage.csv')
d
d_formatted <- d %>%
mutate(value = Score) %>%
group_by(Year) %>%
mutate(rank = rank(-value),
Value_lbl = paste0(" ", value)) %>%
group_by(Country) %>%
filter(rank <= 10) %>%
ungroup()
staticplot = ggplot(d_formatted, aes(rank, group = Country, fill = as.factor(Country), colour = as.factor(Country))) +
geom_tile(aes(y = value/2, height = value, width = 0.8), alpha = 0.8, colour = NA) +
geom_text(aes(y = 0, label = paste(Country, " ")), vjust = 0.2, hjust = 1, size = 8) +
geom_text(aes(y = value, label = Value_lbl, hjust = 0), size = 8) +
coord_flip(clip = "off", expand = FALSE) +
scale_x_reverse() +
guides(colour = FALSE, fill = FALSE) +
theme(axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "none",
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_line(),
panel.grid.minor.x = element_line(),
plot.title = element_text(size = 32, hjust = 0.5, face = "bold", colour = "black", vjust = -1),
plot.subtitle=element_text(size = 32, hjust = 0.5, face = "italic", colour = "black"),
plot.caption = element_text(size = 16, hjust = 0.5, face = "italic", colour = "black"),
plot.background = element_blank(),
plot.margin = margin(1, 3, 1, 6.5, "cm")) +
scale_fill_brewer(palette="Paired") + scale_color_brewer(palette="Paired")
anim = staticplot + transition_states(Year, transition_length = 2, state_length = 1) +
view_follow(fixed_y = TRUE)  +
labs(title = "Happniess (Top 10 Countries): {closest_state}",
subtitle = " ",
caption = "happiness of top 10 countries from 2015 to 2019")
animate(anim, nframes = 100, fps = 10,  width = 1200, height = 600,
renderer = gifski_renderer("Barplot_country.gif"))
library(ggplot2)
library(gganimate)
library(tidyverse)
library(scales)
library(gifski)
library(viridis)
library(RColorBrewer)
d =read.csv(file = '/Users/xxs77/desktop/happiness_percentage.csv')
d
d_formatted <- d %>%
mutate(value = Score) %>%
group_by(Year) %>%
mutate(rank = rank(-value),
Value_lbl = paste0(" ", value)) %>%
group_by(Country) %>%
filter(rank <= 10) %>%
ungroup()
staticplot = ggplot(d_formatted, aes(rank, group = Country, fill = as.factor(Country), colour = as.factor(Country))) +
geom_tile(aes(y = value/2, height = value, width = 0.8), alpha = 0.8, colour = NA) +
geom_text(aes(y = 0, label = paste(Country, " ")), vjust = 0.2, hjust = 1, size = 8) +
geom_text(aes(y = value, label = Value_lbl, hjust = 0), size = 8) +
coord_flip(clip = "off", expand = FALSE) +
scale_x_reverse() +
guides(colour = FALSE, fill = FALSE) +
theme(axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "none",
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_line(),
panel.grid.minor.x = element_line(),
plot.title = element_text(size = 32, hjust = 0.5, face = "bold", colour = "black", vjust = -1),
plot.subtitle=element_text(size = 32, hjust = 0.5, face = "italic", colour = "black"),
plot.caption = element_text(size = 16, hjust = 0.5, face = "italic", colour = "black"),
plot.background = element_blank(),
plot.margin = margin(1, 3, 1, 6.5, "cm")) +
scale_fill_brewer(palette="Paired") + scale_color_brewer(palette="Paired")
anim = staticplot + transition_states(Year, transition_length = 2, state_length = 1) +
view_follow(fixed_y = TRUE)  +
labs(title = "Happniess (Top 10 Countries): {closest_state}",
subtitle = " ",
caption = "happiness of top 10 countries from 2015 to 2019")
animate(anim, nframes = 100, fps = 10,  width = 1200, height = 600,
renderer = gifski_renderer("Barplot_country.gif"))
library(ggplot2)
library(gganimate)
library(tidyverse)
library(scales)
library(gifski)
library(viridis)
library(RColorBrewer)
d =read.csv(file = '/Users/xxs77/desktop/happiness_percentage.csv')
d
d_formatted <- d %>%
mutate(value = Score) %>%
group_by(Year) %>%
mutate(rank = rank(-value),
Value_lbl = paste0(" ", value)) %>%
group_by(Country) %>%
filter(rank <= 10) %>%
ungroup()
staticplot = ggplot(d_formatted, aes(rank, group = Country, fill = as.factor(Country), colour = as.factor(Country))) +
geom_tile(aes(y = value/2, height = value, width = 0.8), alpha = 0.8, colour = NA) +
geom_text(aes(y = 0, label = paste(Country, " ")), vjust = 0.2, hjust = 1, size = 8) +
geom_text(aes(y = value, label = Value_lbl, hjust = 0), size = 8) +
coord_flip(clip = "off", expand = FALSE) +
scale_x_reverse() +
guides(colour = FALSE, fill = FALSE) +
theme(axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
legend.position = "none",
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_line(),
panel.grid.minor.x = element_line(),
plot.title = element_text(size = 32, hjust = 0.5, face = "bold", colour = "black", vjust = -1),
plot.subtitle=element_text(size = 32, hjust = 0.5, face = "italic", colour = "black"),
plot.caption = element_text(size = 16, hjust = 0.5, face = "italic", colour = "black"),
plot.background = element_blank(),
plot.margin = margin(1, 3, 1, 6.5, "cm")) +
scale_fill_brewer(palette="Paired") + scale_color_brewer(palette="Paired")
anim = staticplot + transition_states(Year, transition_length = 2, state_length = 1) +
view_follow(fixed_y = TRUE)  +
labs(title = "Happniess (Top 10 Countries): {closest_state}",
subtitle = " ",
caption = "happiness of top 10 countries from 2015 to 2019")
animate(anim, nframes = 100, fps = 10,  width = 1200, height = 600,
renderer = gifski_renderer("Barplot_country.gif"))
